<html>

<head>
<title>NDIPolaris Instrument Driver Readme</title>
</head>

<body>
<pre>
<font face = "Times New Roman", size = 3>
<h2>NDIPolaris Instrument Driver Readme</h2>
To rate this driver, go to the NDIPolaris driver download page on the <a href = http://www.ni.com/idnet>Instrument Driver Network</a>.

<h4>1. Overview</h4>
Instrument Driver Technology:  Plug and Play
Supported Language(s):  LabVIEW

Supported Model(s):  Polaris
Model(s) Tested:  Polaris
Interface(s):  RS-232
Firmware Revision Tested: 022

Certified:  Yes
NI Supported:  Yes
Source Code Available:  Yes

Driver Revision: 1.0 
Original Release Date: 4/2005 
Current Revision Date: 4/2005 



<h4>2. Required Software</h4>
Some software components need to be installed before using this instrument driver. The minimum versions of 
these components are listed below, and can be downloaded from the Download Site.

VISA 3.0

Note: VISA has additional software requirements. NI-VISA requires that NI-488.2 and/or NI-VXI be installed 
on your system. Check with VISA help for additional support software and hardware requirements.


<h4>3. Installation Instructions</h4>
LabVIEW:
Instrument drivers should be installed as a subdirectory of the labview\instr.lib. For example, the HP34401A 
instrument driver, which is included with LabVIEW, is installed in the following directory: 

labview\instr.lib\hp34401a

Within this directory you can find the menu files and VI libraries that make up an instrument driver. The 
menu files allow you to view the instrument driver VIs from the Functions palette. The VI libraries contain 
the instrument driver VIs.


<h4>4. Using the Instrument Driver</h4>
LabVIEW:
To verify communication with your instrument and test a typical programmatic instrument operation, you should 
first open the Example VIs within the instrument driver. Look over each of the controls and set them
appropriately. Generally, with the exception of the address field, the defaults for most controls will be 
sufficient for your first run. You will need to set the instrument resource name appropriately. After running
the VI, check to see that reasonable data was returned and an error was not reported in the error cluster.

After you have verified basic communication with your instrument, you might want to customize instrument 
control for your needs. If your application needs are similar to the Getting Started or Example VI, the 
simplest means of creating a customized VI is to save a copy of the Getting Started or Example VI by 
selecting Save As from the File menu. You can then modify this example to meet your specific needs.

For more details, reference the <i>LabVIEW Help</i> under <i>Help &#0187; VI, Function, &amp; How-To Help</i>.


<h4>5. Known Issues</h4>
To report issues or provide feedback about this instrument driver, please send an email to <a 
href="mailto:instrument.driver@ni.com">instrument.driver@ni.com</a>.

The Example VI "ndipolaris Measurement Example 3D Plot.VI" uses ActiveX functions and will only work on 
Windows operating systems that support ActiveX.  This Example is provided simply to display transformations
in an intuitive manner; plotting the points takes a significant amount of time and will noticibly slow down the 
rate at which transformations are acquired.


<h4>6. Revision History</h4>
The latest version of this and other LabVIEW and LabWindows/CVI instrument drivers can be downloaded at the 
<a href = http://www.ni.com/idnet>Instrument Driver Network</a>.

REV 1.0, 04/2005, LV 7.0
Created by: Shane Guillet, Austin, TX.
Original Release.

</font>
</pre>
</body>
</html>












